#BlueJ class context
comment0.target=TicTacToe
comment0.text=\r\n\ @brief\ Clase\ TicTacToe\ que\ representa\ el\ juego\ del\ gato\ (tres\ en\ raya).\r\n
comment1.params=
comment1.target=TicTacToe()
comment1.text=\r\n\ @brief\ Constructor\ que\ inicializa\ el\ tablero\ y\ selecciona\ al\ primer\ jugador.\r\n
comment10.params=
comment10.target=void\ seleccionarInicial()
comment10.text=\r\n\ @brief\ Selecciona\ aleatoriamente\ al\ jugador\ inicial\ ('X'\ o\ 'O').\r\n
comment11.params=
comment11.target=void\ hacerMovimiento()
comment11.text=\r\n\ @brief\ Permite\ a\ los\ jugadores\ realizar\ movimientos.\r\n\ \r\n\ Realiza\ los\ movimientos,\ alterna\ entre\ los\ jugadores\ y\ verifica\ si\ el\ juego\ ha\ terminado.\r\n
comment12.params=
comment12.target=void\ cambiarJugador()
comment12.text=\r\n\ @brief\ Cambia\ al\ jugador\ actual.\r\n
comment13.params=
comment13.target=boolean\ ganadorJuego()
comment13.text=\r\n\ @brief\ Verifica\ si\ hay\ un\ ganador.\r\n\ @return\ true\ si\ hay\ un\ ganador,\ false\ en\ caso\ contrario.\r\n
comment14.params=
comment14.target=boolean\ revisarFilas()
comment14.text=\r\n\ @brief\ Verifica\ si\ hay\ un\ ganador\ en\ las\ filas.\r\n\ @return\ true\ si\ hay\ un\ ganador\ en\ alguna\ fila,\ false\ en\ caso\ contrario.\r\n
comment15.params=
comment15.target=boolean\ revisarColumnas()
comment15.text=\r\n\ @brief\ Verifica\ si\ hay\ un\ ganador\ en\ las\ columnas.\r\n\ @return\ true\ si\ hay\ un\ ganador\ en\ alguna\ columna,\ false\ en\ caso\ contrario.\r\n
comment16.params=
comment16.target=boolean\ revisarDiagonales()
comment16.text=\r\n\ @brief\ Verifica\ si\ hay\ un\ ganador\ en\ las\ diagonales.\r\n\ @return\ true\ si\ hay\ un\ ganador\ en\ alguna\ diagonal,\ false\ en\ caso\ contrario.\r\n
comment17.params=
comment17.target=boolean\ esEmpate()
comment17.text=\r\n\ @brief\ Verifica\ si\ el\ juego\ ha\ terminado\ en\ empate.\r\n\ @return\ true\ si\ es\ empate,\ false\ en\ caso\ contrario.\r\n
comment18.params=
comment18.target=boolean\ tableroLleno()
comment18.text=\r\n\ @brief\ Verifica\ si\ el\ tablero\ est\u00E1\ lleno.\r\n\ @return\ true\ si\ el\ tablero\ est\u00E1\ lleno,\ false\ si\ a\u00FAn\ hay\ espacios\ vac\u00EDos.\r\n
comment19.params=
comment19.target=boolean\ juegoTerminado()
comment19.text=\r\n\ @brief\ Verifica\ si\ el\ juego\ ha\ terminado.\r\n\ @return\ true\ si\ el\ juego\ ha\ terminado,\ false\ en\ caso\ contrario.\r\n
comment2.params=
comment2.target=void\ setTablero()
comment2.text=\r\n\ @brief\ Establece\ el\ tablero\ de\ juego.\r\n
comment20.params=
comment20.target=void\ reiniciarJuego()
comment3.params=
comment3.target=char[][]\ getTablero()
comment3.text=\r\n\ @brief\ Devuelve\ el\ tablero\ actual.\r\n\ @return\ Una\ matriz\ de\ caracteres\ que\ representa\ el\ tablero.\r\n
comment4.params=
comment4.target=void\ setJugadorActual()
comment4.text=\r\n\ @brief\ Establece\ el\ jugador\ actual.\r\n
comment5.params=
comment5.target=char\ getJugadorActual()
comment5.text=\r\n\ @brief\ Devuelve\ el\ jugador\ actual.\r\n\ @return\ Caracter\ que\ representa\ al\ jugador\ actual\ ('X'\ o\ 'O').\r\n
comment6.params=
comment6.target=void\ ultimoMovimiento()
comment6.text=\r\n\ @brief\ Establece\ el\ \u00FAltimo\ movimiento\ realizado.\r\n
comment7.params=
comment7.target=char\ getUltimoMovimiento()
comment7.text=\r\n\ @brief\ Devuelve\ el\ \u00FAltimo\ movimiento\ realizado.\r\n\ @return\ Caracter\ que\ representa\ el\ \u00FAltimo\ movimiento\ ('X'\ o\ 'O').\r\n
comment8.params=
comment8.target=void\ iniciarJuego()
comment8.text=\r\n\ @brief\ Inicializa\ el\ tablero\ con\ espacios\ vac\u00EDos\ ('-').\r\n
comment9.params=
comment9.target=void\ estadoActual()
comment9.text=\r\n\ @brief\ Imprime\ el\ estado\ actual\ del\ tablero.\r\n
numComments=21
